// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgres://irytulvmxlznjd:663206fe3707bd4e2c4e3c26c76372a7d417e7e8c321d5498505b2ceaa1a9937@ec2-3-209-124-113.compute-1.amazonaws.com:5432/d3o1ogrdi5hncb"
  //  url      = env("DATABASE_URL")
  //    url      = "postgresql://testuser:oneness123@localhost:5432/booking_app?schema=public"
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String?
  createdAt DateTime @default(now()) @map(name: "created_at")
  updatedAt DateTime @updatedAt @map(name: "updated_at")

  @@map(name: "users")
}

model Attendee {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  bookings  Booking[]
  createdAt DateTime  @default(now()) @map(name: "created_at")
  updatedAt DateTime  @updatedAt @map(name: "updated_at")

  @@map(name: "attendees")
}

model Booking {
  id               Int      @id @default(autoincrement())
  attendee         Attendee @relation(fields: [attendee_id], references: [id], onDelete: Cascade)
  attendee_id      Int
  additional_notes String
  schedule_date    String
  duration         Int
  owner_name       String
  owner_email      String
  createdAt        DateTime @default(now()) @map(name: "created_at")
  updatedAt        DateTime @updatedAt @map(name: "updated_at")


  @@map(name: "bookings")
}

//model EventType {
//  id        Int      @id @default(autoincrement())
//  name      String
//  email     String   @unique
//  password  String?
//  createdAt DateTime @default(now()) @map(name: "created_at")
//  updatedAt DateTime @updatedAt @map(name: "updated_at")
//
//  @@map(name: "event_types")
//}
//
//model Event {
//  id        Int      @id @default(autoincrement())
//  name      String
//  email     String   @unique
//  password  String?
//  createdAt DateTime @default(now()) @map(name: "created_at")
//  updatedAt DateTime @updatedAt @map(name: "updated_at")
//
//  @@map(name: "events")
//}
//
//

//
//model Company {
//  id        Int      @id @default(autoincrement())
//  name      String
//  email     String   @unique
//  password  String?
//  createdAt DateTime @default(now()) @map(name: "created_at")
//  updatedAt DateTime @updatedAt @map(name: "updated_at")
//
//  @@map(name: "companies")
//}
